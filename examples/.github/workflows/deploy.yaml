name: Deploy

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

on:
  push:
    branches: [main]

jobs:
  build:
    name: "Build & Deploy"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: arn:aws:iam::XXXX:role/XXXX
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: opentofu/setup-opentofu@v1
      # Store tofu in out working dir for next step
      - run: |
          cp ${{ env.TOFU_CLI_PATH }}/tofu-bin .
      - uses: gruntwork-io/terragrunt-action@v2
        name: Tofu Outputs
        id: tofu-outputs
        env:
          # Use the local copy of tofu to run terragrunt
          TERRAGRUNT_TFPATH: ${{github.workspace}}/tofu-bin
        with:
          tg_version: 0.54.22
          tf_version: none # Use opentofu ^^^
          tg_dir: infra/staging
          tg_command: output -json -lock-timeout=5m
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile.base
          push: true
          tags: "${{fromJson(steps.tofu-outputs.outputs.tg_action_output).docker_repository_url}}:${{github.sha}}"
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - uses: gruntwork-io/terragrunt-action@v2
        name: Deploy
        env:
          # Use the local copy of tofu to run terragrunt
          TERRAGRUNT_TFPATH: ${{github.workspace}}/tofu-bin
          DOCKER_TAG: ${{github.sha}}
          DOCKER_REGISTRY_URL: ${{fromJson(steps.tofu-outputs.outputs.tg_action_output).docker_repository_url}}
        with:
          tg_version: 0.54.22
          tf_version: none # Use opentofu ^^^
          tg_dir: infra/staging
          # Get the compose file and replace the env vars
          tg_command: apply -var "compose_file=$(envsubst < ${{github.workspace}}/docker-compose-release.yaml)" -var "docker_tag=${{github.sha}}" -lock-timeout=5m
